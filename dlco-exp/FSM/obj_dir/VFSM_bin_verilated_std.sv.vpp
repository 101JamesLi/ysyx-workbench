`begin_keywords "1800-2017"
`line 1 "/usr/local/share/verilator/include/verilated_std.sv" 1
 

`line 3 "/usr/local/share/verilator/include/verilated_std.sv" 0
 

`line 5 "/usr/local/share/verilator/include/verilated_std.sv" 0
 

`line 7 "/usr/local/share/verilator/include/verilated_std.sv" 0
 
 
 
 

`line 12 "/usr/local/share/verilator/include/verilated_std.sv" 0
 
 
 
 
 
 
 
 
 
 
 
 

`line 25 "/usr/local/share/verilator/include/verilated_std.sv" 0
/*verilator lint_off DECLFILENAME*/ 
/*verilator lint_off TIMESCALEMOD*/ 
/*verilator lint_off UNUSEDSIGNAL*/ 
package std;
     
     
    typedef class process;

`line 33 "/usr/local/share/verilator/include/verilated_std.sv" 0
    class mailbox #(type T);
        protected int m_bound;
        protected T m_queue[$];

`line 37 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function new(int bound = 0);
            m_bound = bound;
        endfunction

`line 41 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function int num();
            return m_queue.size();
        endfunction

`line 45 "/usr/local/share/verilator/include/verilated_std.sv" 0
        task put(T message);
     
               
                   
            
    
        endtask

`line 53 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function int try_put(T message);
            if (num() < m_bound) begin
                m_queue.push_back(message);
                return 1;
            end
            return 0;
        endfunction

`line 61 "/usr/local/share/verilator/include/verilated_std.sv" 0
        task get(ref T message);
     
               
              
    
        endtask

`line 68 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function int try_get(ref T message);
            if (num() > 0) begin
                message = m_queue.pop_front();
                return 1;
            end
            return 0;
        endfunction

`line 76 "/usr/local/share/verilator/include/verilated_std.sv" 0
        task peek(ref T message);
     
               
              
    
        endtask

`line 83 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function int try_peek(ref T message);
            if (num() > 0) begin
                message = m_queue[0];
                return 1;
            end
            return 0;
        endfunction
    endclass

`line 92 "/usr/local/share/verilator/include/verilated_std.sv" 0
    class semaphore;
        protected int m_keyCount;

`line 95 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function new(int keyCount = 0);
            m_keyCount = keyCount;
        endfunction

`line 99 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function void put(int keyCount = 1);
            m_keyCount += keyCount;
        endfunction

`line 103 "/usr/local/share/verilator/include/verilated_std.sv" 0
        task get(int keyCount = 1);
     
               
              
    
        endtask

`line 110 "/usr/local/share/verilator/include/verilated_std.sv" 0
        function int try_get(int keyCount = 1);
            if (m_keyCount >= keyCount) begin
                m_keyCount -= keyCount;
                return 1;
            end
            return 0;
        endfunction
    endclass
endpackage

`line 120 "/usr/local/share/verilator/include/verilated_std.sv" 2
